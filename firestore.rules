rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // TEMPORARY: Allow all access for development/testing
    // This bypasses authentication requirements since the app uses localStorage
    // WARNING: Remove this before production deployment!
    match /{document=**} {
      allow read, write: if true;
    }
    
    /* 
    ============================================================================
    PRODUCTION RULES (Commented out - requires Firebase Authentication)
    ============================================================================
    Uncomment these rules when you implement Firebase Authentication
    and remove the "allow all" rule above.
    
    // Users collection
    match /users/{userId} {
      // Anyone authenticated can read user profiles (needed for doctor selection)
      allow read: if request.auth != null;
      // Users can only write their own profile
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Appointments collection
    match /appointments/{appointmentId} {
      // Patients can create appointments
      allow create: if request.auth != null && 
                      request.resource.data.patientId == request.auth.uid;
      
      // Patients and doctors can read their own appointments
      allow read: if request.auth != null && 
                    (resource.data.patientId == request.auth.uid ||
                     resource.data.doctorId == request.auth.uid);
      
      // Doctors can update appointments (confirm, complete, cancel)
      allow update: if request.auth != null && 
                      resource.data.doctorId == request.auth.uid;
      
      // Patients can delete their own pending appointments
      allow delete: if request.auth != null && 
                      resource.data.patientId == request.auth.uid &&
                      resource.data.status == 'pending';
    }
    
    // Health Records collection
    match /healthRecords/{recordId} {
      // Only doctors can create health records
      allow create: if request.auth != null;
      
      // Patients and their doctors can read
      allow read: if request.auth != null && 
                    (resource.data.patientId == request.auth.uid ||
                     resource.data.doctorId == request.auth.uid);
      
      // Doctors can update their own records
      allow update: if request.auth != null && 
                      resource.data.doctorId == request.auth.uid;
    }
    
    // Prescriptions collection
    match /prescriptions/{prescriptionId} {
      // Only doctors can create prescriptions
      allow create: if request.auth != null;
      
      // Patients and their doctors can read
      allow read: if request.auth != null && 
                    (resource.data.patientId == request.auth.uid ||
                     resource.data.doctorId == request.auth.uid);
      
      // Doctors can update their own prescriptions
      allow update: if request.auth != null && 
                      resource.data.doctorId == request.auth.uid;
    }
    
    // Lab Tests collection
    match /labTests/{labTestId} {
      // Only doctors can create lab test orders
      allow create: if request.auth != null;
      
      // Patients, doctors, and lab technicians can read
      allow read: if request.auth != null && 
                    (resource.data.patientId == request.auth.uid ||
                     resource.data.doctorId == request.auth.uid);
      
      // Doctors and lab technicians can update
      allow update: if request.auth != null && 
                      (resource.data.doctorId == request.auth.uid);
    }
    */
  }
}
